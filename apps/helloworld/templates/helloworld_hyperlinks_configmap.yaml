apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-hyperlinks-configmap
  labels:
    {{- include "devops-stack-helloworld.labels" $ | indent 4 }}
data:
  hyperlinks.js: |-
    const lists = [
      {
        heading: 'Applications',
        links: [
          {
            title: 'Argo CD',
            url: 'https://argocd.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- if .Values.apps.keycloak }}
          {
            title: 'Keycloak',
            url: 'https://keycloak.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
          {{- if .Values.apps.traefik }}
          {
            title: 'Traefik Dashboard',
            url: 'https://traefik.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
          {{- if .Values.apps.minio }}
          {
            title: 'MinIO Console',
            url: 'https://minio.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
          {{- if .Values.apps.longhorn }}
          {
            title: 'Longhorn Dashboard',
            url: 'https://longhorn.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
          {{- if .Values.apps.grafana }}
          {
            title: 'Grafana',
            url: 'https://grafana.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
          {{- if .Values.apps.prometheus }}
          {
            title: 'Prometheus',
            url: 'https://prometheus.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {
            title: 'Alertmanager',
            url: 'https://alertmanager.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end }}
          {{- if .Values.apps.thanos }}
          {
            title: 'Thanos Query',
            url: 'https://thanos-query.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {
            title: 'Thanos Bucketweb',
            url: 'https://thanos-bucketweb.{{ printf "%s.%s.%s" .Values.cluster.subdomain .Values.cluster.name .Values.cluster.domain  | trimPrefix "." }}/',
          },
          {{- end -}}
        ],
      },
      {
        heading: 'DevOps Stack',
        links: [
          {
            title: 'About',
            url: 'https://devops-stack.io/',
          },
          {
            title: 'Documentation',
            url: 'https://devops-stack.io/docs/latest/',
          },
          {
            title: 'Repository',
            url: 'https://github.com/camptocamp/devops-stack',
          },
        ],
      },
      {
        heading: 'Our Company',
        links: [
          {
            title: 'Camptocamp',
            url: 'https://www.camptocamp.com/',
          },
        ],
      },
    ]

    function renderLists() {
      const linksWrapper = document.querySelector('#links')

      lists.forEach(list => {
          const linksTemplate = list.links.map(link => {
              return `
          <li class="links__item">
            <a class="links__link" href="${link.url}">${link.title}</a>
          </li>
        `
          })

          const template = `
        <ul class="links">
          <li class="links__item">
            <span class="links__heading">${list.heading}</span>
          </li>
          ${linksTemplate.join('')}
        </ul>
      `

          linksWrapper.insertAdjacentHTML('beforeend', template)
      })
    }

    renderLists()
